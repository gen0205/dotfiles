# .tmux.confの再読み込みは以下コマンド
# tmux source ~/.tmux.conf

# tmux起動時のシェルをzshにする
set-option -g default-shell /bin/zsh

# prefixキー(ctrl + Space)
set -g prefix C-Space
# C-bのキーバインドを解除
unbind C-b
# .tmux.conf再読み込み
unbind r
bind r source-file ~/.tmux.conf
# escキーの反応速度を最速にする(デフォルトだと500msの遅延)
set -s escape-time 0

# ========================
# ステータスバー関連
# ========================
# ステータスラインに現在のセッション名表示
set-option -g status-left "#[bold] [#S:#I:#P] "
set-option -g status-right '#[bold] #(wifi) #(battery --tmux) [%Y-%m-%d(%a) %H:%M]'
# ステータスバーをトップに配置する
set-option -g status-position top
# ステータスバーを1秒毎に描画し直す
set-option -g status-interval 1
# センタライズ（主にウィンドウ番号など）
set-option -g status-justify centre
# ステータスバー左の長さ
set -g status-left-length 90
# ステータスバー右の長さ
set -g status-right-length 90
# ステータスバーの色を設定する
set -g status-fg black
set -g status-bg white

#マウス操作を有効にする
set-option -g mouse on
# ========================
# コピー関連
# ========================
# スクロールアップするとコピーモードに入る
bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
# 最後までスクロールダウンするとコピーモードを抜ける
bind-key -n WheelDownPane select-pane -t= \; send-keys -M

set-option -g default-command "reattach-to-user-namespace -l zsh"
# コピーモードでvimキーバインドを使う
setw -g mode-keys vi
# 'v' で選択を始める
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# `Enter` でもcopy-pipeを使う
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# ']' でpbpasteを使う
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# ドラッグでのコピー
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"


# ========================
# ペイン関連
# ========================
# set inactive/active window styles
# 選択していないペインは背景色をグレー気味に設定
set -g window-style fg=terminal,bg=colour236
set -g window-active-style fg=terminal,bg=terminal
# pane border styles
set -g pane-active-border-style fg=brightgreen,bg=default
set -g pane-border-style fg=default,bg=default
# pane の分割
bind -n M-v split-window -h -c "#{pane_current_path}"
bind -n M-s split-window -v -c "#{pane_current_path}"
# | でペインを縦分割する
bind | split-window -h -c "#{pane_current_path}"
# - でペインを縦分割する
bind - split-window -v -c "#{pane_current_path}"

# choose関連機能
bind -n M-a choose-tree
bind -n M-e choose-session
bind -n M-w choose-tree -w

# prefix + hjkl でもペイン切り替え
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# ペイン間の移動 <C-h><C-j><C-k><C-l>で移動
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    #| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#bind -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
#bind -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
#bind -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
#bind -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
#tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
#if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    #"bind -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
#if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    #"bind -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# 以下はvim/nvimでのペイン移動に加えて、ターミナルでfzf起動時、fzfの<C-j><C-k>のキーバインドを有効にする
# Smart pane switching with awareness of Vim splits and fzf.
# See: https://github.com/christoomey/vim-tmux-navigator
# and also: https://github.com/junegunn/fzf/pull/582#issuecomment-377731826
not_tmux="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(g?(view|n?vim?x?)(diff)?|fzf)$'"
bind-key -n 'C-h' if-shell "$not_tmux" "send-keys C-h"  "select-pane -L"
bind-key -n 'C-j' if-shell "$not_tmux" "send-keys C-j"  "select-pane -D"
bind-key -n 'C-k' if-shell "$not_tmux" "send-keys C-k"  "select-pane -U"
bind-key -n 'C-l' if-shell "$not_tmux" "send-keys C-l"  "select-pane -R"
bind-key -n "C-\\" if-shell "$not_tmux" "send-keys C-\\" "select-pane -l"

bind -T copy-mode-vi 'C-h' select-pane -L
bind -T copy-mode-vi 'C-j' select-pane -D
bind -T copy-mode-vi 'C-k' select-pane -U
bind -T copy-mode-vi 'C-l' select-pane -R
bind -T copy-mode-vi 'C-\' select-pane -l

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
# ========================
# ウィンドウ関連
# ========================
# window の作成, 移動
bind -n M-c new-window -c "#{pane_current_path}"
bind -n M-j next-window
bind -n M-k previous-window
# カレントウィンドウを強調
set-window-option -g window-status-current-style bright
set-window-option -g window-status-style dim

# ========================
# セッション関連
# ========================
# session の作成, 移動
bind -n M-C new-session
bind -n M-l switch-client -n
bind -n M-h switch-client -p
